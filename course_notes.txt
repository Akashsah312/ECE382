Try to flip classroom in some lessons - have them watch videos at home, then do practical exercises in-class.

Revamp lessons to be more in reverse - show demo, then code, then explain code, then explain concepts.

Look into more interactive exercises.  Have cadets bring computers, MSP430 boards to class - actually do in-class coding.

Look into screen-sharing - remote desktop into cadet machines and show them writing code in front of rest of class.

Do more in-class exercises.  Maybe brief coding assignments in-class with me walking around.  Just get people into the practice of writing code.

Add more practical demos where possible - MSP430 interfacing with different types of hardware, doing different things, etc.

GR Notes

This was a time crunch!  Need to make it shorter for the next time.

Revisit stack problem with respect to the class - just give everyone credit this time around because we didn't go over it in class.

Add space for addressing modes in hand-assembly problem.  Lots of people forgot.  Or 

In SPI problem, give spot for 4 signals - lots of people did signal characteristics.

Lab Notes:
 
Give more step-by-step guidance.  Need to break down labs into different steps â donât put all info on single page.  Info is there, just need to make it more digestible.  Cadets are frustrated, find it hard to get started.
 
GR1:
 
Give full credit for stack question since we didnât really touch on it in class.
Next year, eliminate one of the hand assembly questions.  Put actual space for addressing modes â make them same as number of addressing modes in instruction.
If you do stack, put memory addresses in table.
